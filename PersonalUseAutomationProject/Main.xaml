<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="441,830" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="18">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="-This project ask the user to choose a stock asset, it access the yahoo finace page and downloads the historical data of that asset.&#xA; &#xA;-It formats the data by removing empty rows, removing strings and saving the file into an excel and comma seperated file (Symbol.xlsx and  Symbol.csv) &#xA;-Sorts the input and output files into their respective folders&#xA;-All Symbol.csv files will be moved into Data\input folder&#xA;&#xA;-The Symbol.xlsx will be stored in the project folder, if there is a new Symbol.csv file, the old one will be moved into Data/Output folder and the created Symbol.csv file will be in the Data/Ouput&#xA;&#xA;Pre-Condition: N/A&#xA;Post-Conditon: Symbol.xlsx  file is created from formated data, Queue Items (Formated) data are sent to the Orchestrator &quot;Symbol&quot;. The symbol.csv cotaining (Date, Open and Closing price) file will be created using formatted queue items from the Orchestrator. Both input and output files are sorted accordingly are sorted " DisplayName="MainWorkFlow - ScrapAnalizeData" sap:VirtualizedContainerService.HintSize="421,730" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="symbol" />
      <Variable x:TypeArguments="sd:DataTable" Name="FinalDataTable" />
      <Variable x:TypeArguments="ui:Browser" Name="OpenBrowserTap" />
      <Variable x:TypeArguments="ui:Window" Name="OpenWindow" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SelectSymbol workflow" sap:VirtualizedContainerService.HintSize="379,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="SelectAndDownloadProcess\SelectSymbol.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_Symbol">[{"AAPL","GOOGL","FB","TSLA"}]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Symbol">[symbol]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetHistoricData workflow" sap:VirtualizedContainerService.HintSize="379,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="SelectAndDownloadProcess\GetHistoricData.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_URL">https://finance.yahoo.com/</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Symbol">[symbol]</InArgument>
        <OutArgument x:TypeArguments="ui:Browser" x:Key="out_OpenBrowser">[OpenBrowserTap]</OutArgument>
        <OutArgument x:TypeArguments="ui:Window" x:Key="out_OpenWindow">[OpenWindow]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CreateFinalFileForAnalysis workflow" sap:VirtualizedContainerService.HintSize="379,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="MoveFilesAndFormatDataProcess\CreateFinalFileForAnalysis.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_FinalDataTable">[FinalDataTable]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Symbol">[symbol]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Symbol">[symbol]</OutArgument>
        <InArgument x:TypeArguments="ui:Browser" x:Key="in_OpenBrowser">[OpenBrowserTap]</InArgument>
        <InArgument x:TypeArguments="ui:Window" x:Key="in_OpenWindow">[OpenWindow]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>